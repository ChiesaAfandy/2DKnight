/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gameproject;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Chiesaafandy
 */
public class BossEarthFrame extends javax.swing.JFrame {

    
    
    
    Timer t;
    public BossEarthFrame() {
        initComponents();
        setLocationRelativeTo(this);
        setSize(800,600);
        setLocation(200,100);

        setResizable(false);
        
        
        
        pnlSkill.setVisible(false);
        MCharacter mc = new MCharacter();
        BossEarth bs = new BossEarth();
        
        
        
        
        bs.setBossName("The Hutt");
        bs.setAttackPower(30);
        bs.setHp(200);
        
        lbDescription.setText(bs.getBossName() + ": "+ bs.openTalk());
        lbDamage.setText(bs.endTalk());
        
        lbPlayerhp.setVisible(false);
        lbEnemyhp.setVisible(false);
        lbHeal.setVisible(false);
        lbHeal1.setVisible(false);
        lbHeal2.setVisible(false);
        
        lbPlayerhp.setText("Player Hp :" + Integer.toString(mc.getHP()));
        lbEnemyhp.setText("Enemy Hp  :" + Integer.toString(bs.getHp()));
        
        
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbHeal2 = new javax.swing.JLabel();
        lbHeal1 = new javax.swing.JLabel();
        lbHeal = new javax.swing.JLabel();
        btnAttack = new javax.swing.JButton();
        btnHeal = new javax.swing.JButton();
        lbBossEarth = new javax.swing.JLabel();
        btnSkill = new javax.swing.JToggleButton();
        pnlSkill = new javax.swing.JPanel();
        btnPlayerSkill = new javax.swing.JButton();
        lbSkillPlayer = new javax.swing.JLabel();
        lbSkillDespriptioon = new javax.swing.JLabel();
        btnPlayerSkill2 = new javax.swing.JButton();
        pnlStat = new javax.swing.JPanel();
        lbDescription = new javax.swing.JLabel();
        lbDamage = new javax.swing.JLabel();
        lbEnemyhp = new javax.swing.JLabel();
        lbPlayerhp = new javax.swing.JLabel();
        lbBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        lbHeal2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gameproject/Heal.png"))); // NOI18N
        getContentPane().add(lbHeal2);
        lbHeal2.setBounds(140, 310, 50, 50);

        lbHeal1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gameproject/Heal.png"))); // NOI18N
        getContentPane().add(lbHeal1);
        lbHeal1.setBounds(440, 350, 50, 50);

        lbHeal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gameproject/Heal.png"))); // NOI18N
        getContentPane().add(lbHeal);
        lbHeal.setBounds(250, 450, 50, 50);

        btnAttack.setText("ATTACK");
        btnAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttackActionPerformed(evt);
            }
        });
        getContentPane().add(btnAttack);
        btnAttack.setBounds(20, 490, 200, 70);

        btnHeal.setText("HEAL");
        btnHeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHealActionPerformed(evt);
            }
        });
        getContentPane().add(btnHeal);
        btnHeal.setBounds(300, 490, 200, 70);

        lbBossEarth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gameproject/BossEarthSpriteanimation.gif"))); // NOI18N
        lbBossEarth.setText("jLabel2");
        getContentPane().add(lbBossEarth);
        lbBossEarth.setBounds(240, 130, 250, 260);

        btnSkill.setText("SKILL");
        btnSkill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkillActionPerformed(evt);
            }
        });
        getContentPane().add(btnSkill);
        btnSkill.setBounds(580, 490, 200, 70);

        btnPlayerSkill.setText("EXECUTE");
        btnPlayerSkill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPlayerSkillMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPlayerSkillMouseExited(evt);
            }
        });
        btnPlayerSkill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayerSkillActionPerformed(evt);
            }
        });

        lbSkillPlayer.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        lbSkillPlayer.setText("Skill Description");
        lbSkillPlayer.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lbSkillDespriptioon.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N

        btnPlayerSkill2.setText("ADRENALINE");
        btnPlayerSkill2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPlayerSkill2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPlayerSkill2MouseExited(evt);
            }
        });
        btnPlayerSkill2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayerSkill2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSkillLayout = new javax.swing.GroupLayout(pnlSkill);
        pnlSkill.setLayout(pnlSkillLayout);
        pnlSkillLayout.setHorizontalGroup(
            pnlSkillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnPlayerSkill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lbSkillPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
            .addComponent(lbSkillDespriptioon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnPlayerSkill2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlSkillLayout.setVerticalGroup(
            pnlSkillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSkillLayout.createSequentialGroup()
                .addComponent(lbSkillPlayer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbSkillDespriptioon, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPlayerSkill, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPlayerSkill2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        getContentPane().add(pnlSkill);
        pnlSkill.setBounds(490, 280, 290, 120);

        lbDescription.setBackground(new java.awt.Color(255, 255, 255));
        lbDescription.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        lbDescription.setText("");
        lbDescription.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lbDamage.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N

        lbEnemyhp.setBackground(new java.awt.Color(255, 255, 255));
        lbEnemyhp.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        lbEnemyhp.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbEnemyhp.setText("");
        lbEnemyhp.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lbPlayerhp.setBackground(new java.awt.Color(255, 255, 255));
        lbPlayerhp.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        lbPlayerhp.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbPlayerhp.setText("");
        lbPlayerhp.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout pnlStatLayout = new javax.swing.GroupLayout(pnlStat);
        pnlStat.setLayout(pnlStatLayout);
        pnlStatLayout.setHorizontalGroup(
            pnlStatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStatLayout.createSequentialGroup()
                .addGroup(pnlStatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                    .addComponent(lbDamage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlStatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStatLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(lbPlayerhp, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE))
                    .addComponent(lbEnemyhp, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)))
        );
        pnlStatLayout.setVerticalGroup(
            pnlStatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStatLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlStatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDescription)
                    .addComponent(lbPlayerhp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlStatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDamage, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbEnemyhp))
                .addGap(107, 107, 107))
        );

        getContentPane().add(pnlStat);
        pnlStat.setBounds(20, 400, 760, 70);

        lbBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gameproject/BossEarthBackground.png"))); // NOI18N
        getContentPane().add(lbBackground);
        lbBackground.setBounds(0, 0, 800, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAttackActionPerformed
        Combat cp = new Combat();
        BossEarth bs = new BossEarth();
        MCharacter mc = new MCharacter();
        
        
        
        playerAttack();
        seeHP();
        setEnableFalse();
        
        
        hitback();
        
        enemyAttack();
        
    }//GEN-LAST:event_btnAttackActionPerformed

    private void btnHealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHealActionPerformed
        Combat cp = new Combat();
        BossEarth bs = new BossEarth();
        MCharacter mc = new MCharacter();
        
        playerHeal();
        
        
        seeHP();
        
        setEnableFalse();
        
        enemyAttack();
        
        
    }//GEN-LAST:event_btnHealActionPerformed

    private void btnSkillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkillActionPerformed
       if (btnSkill.isSelected()){
           pnlSkill.setVisible(true);
       }
       else {
           pnlSkill.setVisible(false);
       }
    }//GEN-LAST:event_btnSkillActionPerformed

    private void btnPlayerSkillMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPlayerSkillMouseEntered
        lbSkillDespriptioon.setText("Instant kill if boss hp below 30");
    }//GEN-LAST:event_btnPlayerSkillMouseEntered

    private void btnPlayerSkillMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPlayerSkillMouseExited
        lbSkillDespriptioon.setText("");
    }//GEN-LAST:event_btnPlayerSkillMouseExited

    private void btnPlayerSkillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayerSkillActionPerformed
        Combat cp = new Combat();
        BossEarth bs = new BossEarth();
        MCharacter mc = new MCharacter();
        int enemyHP = bs.getHp();
        
        
        if(enemyHP <=30){
            bs.setHp(0);
            seeHP();
            
            
        }
        else{
            lbSkillDespriptioon.setText("Enemy HP Still " + enemyHP);
        }
                
    }//GEN-LAST:event_btnPlayerSkillActionPerformed

    private void btnPlayerSkill2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPlayerSkill2MouseEntered
        lbSkillDespriptioon.setText("Critical damage if your hp below 20");
    }//GEN-LAST:event_btnPlayerSkill2MouseEntered

    private void btnPlayerSkill2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPlayerSkill2MouseExited
        lbSkillDespriptioon.setText("");
    }//GEN-LAST:event_btnPlayerSkill2MouseExited

    private void btnPlayerSkill2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayerSkill2ActionPerformed
        Combat cp = new Combat();
        BossEarth bs = new BossEarth();
        MCharacter mc = new MCharacter();
        int enemyHP = bs.getHp();
        
        
        if(mc.getHP() <=20){
            setEnableFalse();
            bs.setHp(bs.getHp()-mc.maxDamage - 10);
            lbDamage.setText("Critical hit");
            lbBossEarth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gameproject/BossEarthSpriteHit.png")));
            enemyAttack();
            seeHP();
            hitback();
        }
        else{
            lbSkillDespriptioon.setText("Your HP Still " + mc.getHP());
        }
        
                
                
    }//GEN-LAST:event_btnPlayerSkill2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BossEarthFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BossEarthFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BossEarthFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BossEarthFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BossEarthFrame().setVisible(true);
            }
        });
    }
    public void seeHP(){
        Combat cp = new Combat();
        BossEarth bs = new BossEarth();
        MCharacter mc = new MCharacter();
        
        lbPlayerhp.setVisible(true);
        lbEnemyhp.setVisible(true);
        
        saveText();
        
        if (mc.getHP() <= 0 && bs.getHp() <= 0){
            mc.setHP(0);
            bs.setHp(0);
            saveText();
            drawGameover();
            
        }
                
        if (mc.getHP()<= 0){
            mc.setHP(0);
            saveText();
            playerGameover();
        }
        if (bs.getHp()<= 0){
            bs.setHp(0);
            saveText();
            bossGameover();
        }
        
        saveText();
    }
    
    public void saveText(){
        Combat cp = new Combat();
        BossEarth bs = new BossEarth();
        MCharacter mc = new MCharacter();
        
        System.out.println(mc.getHP());
        lbPlayerhp.setText("Player Hp :" + Integer.toString(mc.getHP()));
        System.out.println(bs.getHp());
        lbEnemyhp.setText("Enemy Hp  :" + Integer.toString(bs.getHp()));
    }
    
    public void playerGameover(){
        BossEarth bs = new BossEarth();
        MCharacter mc = new MCharacter();
        
        lbBossEarth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gameproject/BossEarthSpriteanimation.gif")));
        setEnableFalse();
        lbDescription.setText("You Defeated By " + bs.getBossName());
        lbDamage.setText("Retreating The Battle Area");
        
        
        BossEarthFrame bFrame = new BossEarthFrame();
        JOptionPane.showMessageDialog(bFrame, "Going back to map menu");
        
        Level peta = new Level();
        peta.setVisible(true);
        this.dispose();
    }
    
    public void bossGameover(){
        BossEarth bs = new BossEarth();
        MCharacter mc = new MCharacter();
        
        lbBossEarth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gameproject/BossEarthSpriteHit.png")));
        setEnableFalse();
        lbDescription.setText("Congratulation You Defeated " + bs.getBossName());
        lbDamage.setText("Dmg, Heal and HP Increase");
        mc.setMaxHP(mc.getMaxHP()+ 20);
        mc.setHP(mc.getMaxHP());
        
        mc.setMaxDamage(mc.getMaxDamage()+20);
        mc.setDamage(mc.getMaxDamage());
        
        mc.setMaxHeal(mc.getMaxHeal()+20);
        mc.setHeal(mc.getMaxHeal());
        
        
        BossEarthFrame bFrame = new BossEarthFrame();
        JOptionPane.showMessageDialog(bFrame, "Going back to map menu");
        
        Level peta = new Level();
        peta.setVisible(true);
        this.dispose();
    }
    
    public void drawGameover(){
        BossEarth bs = new BossEarth();
        MCharacter mc = new MCharacter();
        
        lbBossEarth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gameproject/BossEarthSpriteanimation.gif")));
        setEnableFalse();
        lbDescription.setText("You Defeated By " + bs.getBossName());
        lbDamage.setText("Retreating The Battle Area");
        
        
        BossEarthFrame bFrame = new BossEarthFrame();
        JOptionPane.showMessageDialog(bFrame, "Going back to map menu");
        
        Level peta = new Level();
        peta.setVisible(true);
        this.dispose();
    }
    
    public void setEnableTrue(){
        btnHeal.setEnabled(true);
        btnAttack.setEnabled(true);
        btnSkill.setEnabled(true);
    }
    
    public void setEnableFalse(){
        btnHeal.setEnabled(false);
        btnAttack.setEnabled(false);
        btnSkill.setEnabled(false);
        btnSkill.setSelected(false);
        pnlSkill.setVisible(false);
    }
    
    public void playerAttack(){
        Combat cp = new Combat();
        BossEarth bs = new BossEarth();
        MCharacter mc = new MCharacter();
        
        int damage = cp.pcAttack();
        bs.setHp(bs.getHp()- damage);
        
        lbDescription.setText("You Attack " + bs.getBossName());
        
        if(damage == 0){
            lbDamage.setText("Attack MISS");
        }
        else if (damage == mc.getDamage()){
            lbDamage.setText("Critical hit");
            lbBossEarth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gameproject/BossEarthSpriteHit.png")));
        }
        else{
            lbDamage.setText("Attack Damage : " + damage);
            lbBossEarth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gameproject/BossEarthSpriteHit.png")));
        }
    }
    
    public void enemyAttack(){
        Combat cp = new Combat();
        BossEarth bs = new BossEarth();
        MCharacter mc = new MCharacter();
        
        t= new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int enemyAttack = bs.EnemyAttack();
                mc.setHP(mc.getHP() - enemyAttack);
                lbDescription.setText("Enemy Attack You" );
                
                if(enemyAttack == 0){
                lbDamage.setText("Attack MISS");
                    }
                else if (enemyAttack == bs.getAttackPower() - 1){
                lbDamage.setText("Critical hit");
            
                    }
                 else{
                   lbDamage.setText("Damage Taken " + enemyAttack );
                    }
                setEnableTrue();
                System.out.println(mc.getHP());
                setEnableTrue();
                
                
                lbHeal.setVisible(false);
                lbHeal1.setVisible(false);
                lbHeal2.setVisible(false);
                seeHP();
            }
        });
        t.setRepeats(false);
        t.start();
    }
    
    public void playerHeal(){
        Combat cp = new Combat();
        BossEarth bs = new BossEarth();
        MCharacter mc = new MCharacter();
        
        int heal = cp.pcHeal();
        mc.setHP(mc.getHP() + heal);
        
        if(mc.getHP() >= mc.getMaxHP()){
            int a;
            mc.setHP(mc.getHP() - heal);
            
            a = mc.getHP() + heal - mc.getMaxHP();
                //100 + 30 = 130 - 100 = 30
            heal = heal - a;
            System.out.println(heal +"+" + mc.getHP() +"-" + mc.getMaxHP());
            System.out.println("heal"+heal);
            //30 = 30 - 30
            mc.setHP(mc.getMaxHP());
        }
        lbHeal.setVisible(true);
        lbHeal1.setVisible(true);
        lbHeal2.setVisible(true);
        
        lbDescription.setText("You Heal Yourself" );
        lbDamage.setText("Recover " + heal + " HP"); 
    }
    
    public void hitback(){
        t= new Timer(100, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                
                lbBossEarth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gameproject/BossEarthSpriteanimation.gif")));
            }
        });
        t.setRepeats(false);
        t.start();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAttack;
    private javax.swing.JButton btnHeal;
    private javax.swing.JButton btnPlayerSkill;
    private javax.swing.JButton btnPlayerSkill2;
    private javax.swing.JToggleButton btnSkill;
    private javax.swing.JLabel lbBackground;
    private javax.swing.JLabel lbBossEarth;
    private javax.swing.JLabel lbDamage;
    private javax.swing.JLabel lbDescription;
    private javax.swing.JLabel lbEnemyhp;
    private javax.swing.JLabel lbHeal;
    private javax.swing.JLabel lbHeal1;
    private javax.swing.JLabel lbHeal2;
    private javax.swing.JLabel lbPlayerhp;
    private javax.swing.JLabel lbSkillDespriptioon;
    private javax.swing.JLabel lbSkillPlayer;
    private javax.swing.JPanel pnlSkill;
    private javax.swing.JPanel pnlStat;
    // End of variables declaration//GEN-END:variables
}
